/**
 * !插入排序流程
 * 1）将待排序的序列的第一个元素看做是一个有序序列，把第二个到最后一个元素当作是未排序序列
 * 2）取出下一个元素，在已排序的序列中 *从后向前* 扫描
 * 3）如果扫描到的元素大于取出的元素，则将游标向前移动一位: j--
 * 4）重复步骤3，直到找到小于或者等于取出的元素的位置
 * 5）将取出的元素插入到该位置后
 * 6）重复2~5
 */

function insertSort(arr) {
  let len = arr.length,
    cur,
    i,
    j
  for (i = 1; i < len; i++) {
    //外循环取待比较元素
    cur = arr[i] //!待排序元素

    //内循环--比较取得的元素和已排序序列中的元素
    for (j = i - 1; j >= 0 && arr[j] > cur; j--) {
      arr[j + 1] = arr[j]
    }

    arr[j + 1] = cur //将取出的元素插进去
  }
}

const arr = [5, 8, 2, 6, 1, 9]
insertSort(arr)
console.log(arr)
/**
 * i=1; j=0; 5,8
 * i=2; j=1; 5,8,8
 *      j=0; 5,5,8
 *      j=-1;2,5,8
 * i=3; j=2; 2,5,8,8
 *      j=1; 2,5,6,8
 * i=4; j=3; 2,5,6,8,8
 *      j=2; 2,5,6,6,8
 *      j=1; 2,5,5,6,8
 *      j=0; 2,2,5,6,8
 *      j=-1 1,2,5,6,8
 * i=5; j=4; 1,2,5,6,8,9
 * i=6; break;
 *
 *
 *
 *
 *
 */
